--TERM PROJECT SCRIPT

----PART ONE

----DROP ALL TABLES SO THAT NOTHING IN RI WOULD AFFECT (RE)CREATION OF TABLES
----DROP ORDERS01 FIRST BECAUSE OF THE FKS
DROP TABLE ORDERS01 CASCADE CONSTRAINTS PURGE;
DROP TABLE CUSTOMER01 CASCADE CONSTRAINTS PURGE;
DROP TABLE PRODUCT01 CASCADE CONSTRAINTS PURGE;
ALTER TABLE PROJ_FILE
  DROP CONSTRAINT SALEID_PK; --DROP CONSTRAINT IN PROJ_FILE
  
----BUILD CUSTOMER01
CREATE TABLE CUSTOMER01
(
CUSTID VARCHAR2(3) 
,FIRSTNAME VARCHAR2(12) 
,LASTNAME VARCHAR2(12)
,CITY VARCHAR2(25)
,STATE CHAR(2)
,ZIP CHAR(5) NOT NULL
,CONSTRAINT CUSTID_PK PRIMARY KEY(CUSTID)
,CONSTRAINT F_L_NAME_UK UNIQUE(FIRSTNAME, LASTNAME)
);

DESC CUSTOMER01;

INSERT INTO CUSTOMER01(CUSTID, FIRSTNAME, LASTNAME, CITY, STATE, ZIP)
SELECT UNIQUE CUSTOMERID, FIRSTNAME, LASTNAME, CITY, STATE, ZIP
FROM PROJ_FILE;

SELECT * FROM CUSTOMER01 ORDER BY 1 DESC;

DROP SEQUENCE SEQ_CUSTOMERID;
CREATE SEQUENCE SEQ_CUSTOMERID
START WITH 120
INCREMENT BY 1;

INSERT INTO CUSTOMER01 
VALUES(SEQ_CUSTOMERID.NEXTVAL, 'JOHN', 'DOE', 'ATLANTA', 'GA', '23685');
INSERT INTO CUSTOMER01 
VALUES(SEQ_CUSTOMERID.NEXTVAL, 'JANE', 'FRANK', 'KEY WEST', 'FL', '89562');

COMMIT;

CREATE INDEX INX_CUST ON CUSTOMER01(ZIP);

SELECT * FROM DICTIONARY
WHERE TABLE_NAME LIKE '%INDEX%';

SELECT * FROM USER_INDEXES
WHERE TABLE_NAME = 'CUSTOMER01';

---BUILD PRODUCT01 

CREATE TABLE PRODUCT01
(
PRODID VARCHAR2(3)
,PRODNAME VARCHAR2(25) NOT NULL
,MSRP NUMBER(8,2)
,CAT VARCHAR(25)
,CONSTRAINT PRODID_PK PRIMARY KEY(PRODID)
,CONSTRAINT MSRP_CK CHECK(MSRP BETWEEN 50 AND 1500)
);

DESC PRODUCT01;

INSERT INTO PRODUCT01
SELECT DISTINCT PRODUCTID, PRODUCTNAME, MSRP, CATEGORY
FROM PROJ_FILE;

SELECT * FROM PRODUCT01 ORDER BY PRODID DESC;

DROP SEQUENCE SEQ_PRODUCTID;
CREATE SEQUENCE SEQ_PRODUCTID
START WITH 207
INCREMENT BY 1;

INSERT INTO PRODUCT01 
VALUES(SEQ_PRODUCTID.NEXTVAL, 'DYSON HEATER', 399, 'LivingRoom');
INSERT INTO PRODUCT01 
VALUES(SEQ_PRODUCTID.NEXTVAL, 'SSD 1T', 200, 'Office');

SELECT * FROM PRODUCT01;

COMMIT;

CREATE INDEX INX_MSRP ON PRODUCT01(MSRP);

SELECT * FROM USER_INDEXES
WHERE TABLE_NAME = 'PRODUCT01';

ALTER TABLE PROJ_FILE
ADD CONSTRAINT SALEID_PK PRIMARY KEY (SALEID);

---BUILD ORDERS01
CREATE TABLE ORDERS01
(
ORDERID VARCHAR2(5) 
,SALEID NUMBER(5,0) 
,CUSTID VARCHAR2(3) 
,PRODID VARCHAR2(3) 
,SALEPRICE NUMBER(8,2)
,SALEDATE DATE
,QUANTITY INTEGER DEFAULT 1
,CONSTRAINT SALEID_FK FOREIGN KEY (SALEID) REFERENCES PROJ_FILE(SALEID)
,CONSTRAINT CUSTID_FK FOREIGN KEY (CUSTID) REFERENCES CUSTOMER01(CUSTID)
,CONSTRAINT PRODUCTID_FK FOREIGN KEY (PRODID) REFERENCES PRODUCT01(PRODID)
);

DESC ORDERS01;

ALTER TABLE ORDERS01
ADD CONSTRAINT CPS_COMP_PK PRIMARY KEY (CUSTID, PRODID, SALEID);

SELECT * FROM USER_CONS_COLUMNS WHERE TABLE_NAME = 'ORDERS01';

ALTER TABLE ORDERS01
ADD SHIPDATE AS (SALEDATE + 2);

DROP SEQUENCE SEQ_ORDERID;
CREATE SEQUENCE SEQ_ORDERID
START WITH 10001
INCREMENT BY 1;

INSERT INTO ORDERS01(SALEID, CUSTID, PRODID, SALEPRICE, SALEDATE)
SELECT SALEID, CUSTOMERID, PRODUCTID, SALEPRICE, TO_DATE(SALEDATE,'MM/DD/YYYY')
FROM PROJ_FILE;

SELECT * FROM ORDERS01;

UPDATE ORDERS01
SET ORDERID = SEQ_ORDERID.NEXTVAL;

DESC ORDERS01;

ALTER TABLE ORDERS01
DROP CONSTRAINT CPS_COMP_PK;

ALTER TABLE ORDERS01
DROP CONSTRAINT SALEID_FK;

ALTER TABLE ORDERS01
ADD CONSTRAINT ORDERSID_PK PRIMARY KEY (ORDERID);

SELECT * FROM ORDERS01;

INSERT INTO ORDERS01(ORDERID, CUSTID, PRODID, SALEPRICE, SALEDATE, QUANTITY)
VALUES(SEQ_ORDERID.NEXTVAL, 102, 203, 220, SYSDATE, 3);
INSERT INTO ORDERS01(ORDERID, CUSTID, PRODID, SALEPRICE, SALEDATE, QUANTITY)
VALUES(SEQ_ORDERID.NEXTVAL, 103, 204, 221, SYSDATE, 4);
INSERT INTO ORDERS01(ORDERID, CUSTID, PRODID, SALEPRICE, SALEDATE, QUANTITY)
VALUES(SEQ_ORDERID.NEXTVAL, 104, 205, 223, SYSDATE, 5);
INSERT INTO ORDERS01(ORDERID, CUSTID, PRODID, SALEPRICE, SALEDATE, QUANTITY)
VALUES(SEQ_ORDERID.NEXTVAL, 105, 206, 224, SYSDATE, 6);

COMMIT;

SELECT * FROM ORDERS01;

CREATE INDEX INX_SALEDATE ON ORDERS01(SALEDATE);

--CHECK TABLE JOINS
SELECT DISTINCT * 
FROM CUSTOMER01 c
  JOIN ORDERS01 o
    ON C.CUSTID = o.CUSTID
  JOIN PRODUCT01 p
    ON O.PRODID = P.PRODID;

--CHECK CONSTRAINT DICTIONARY
SELECT TABLE_NAME, CONSTRAINT_NAME, CONSTRAINT_TYPE, SEARCH_CONDITION, STATUS 
FROM USER_CONSTRAINTS
WHERE TABLE_NAME IN ('PRODUCTS01', 'CUSTOMERS01', 'ORDERS01');

--ER DIAGRAM
--VIEW\DATA MODELER\BROWSER
--UNDER UNTITLED_1, R CLICK ON RELATIONAL MODELS TO BRING UP CANVAS.
--SELECT THE THREE TABLES (WITH CTRL KEY), DRAG TO CANVAS
--R CLICK INSIDE CANVAS, SELECT LAYOUT\AUTO LAYOUT\LAYOUT1

----PART TWO

----QUERY 1
----RETURN CUSTOMERID, FIRSTNAME, AND LASTNAME OF THOSE WHO MADE NO PURCHASES 
----DURING THE LAST QUARTER OF 2005.
SELECT CUSTID, FIRSTNAME, LASTNAME FROM CUSTOMER01
WHERE CUSTID NOT IN
(
SELECT CUSTID FROM ORDERS01  
--WHERE SALEDATE BETWEEN '01-OCT-2005' AND '31-DEC-2005'
WHERE TO_CHAR(SALEDATE, 'Q') = 4 AND TO_CHAR(SALEDATE, 'YYYY') = 2005 
)
ORDER BY CUSTID;

--CUSTID	FIRSTNAME	LASTNAME
--101	John	Miller
--109	Billy	Costigan
--114	Kristy	Bryant
--115	Kelly	Street
--116	Tricia	Hill
--117	Holly	Raines
--118	Natalie	Woods
--119	Wendy	Hilton
 
----QUERY 2
----RETURN FIRSTNAME, LASTNAME,PRODUCTNAME, AND SALEPRICE FOR ALL PRODUCTS 
----SOLD IN OCTOBER 2005 IN THE ORDER OF HIGH SALE PRICE TO LOW.
SELECT FIRSTNAME, LASTNAME, PRODNAME 
,TO_CHAR((SALEPRICE),'$999999.99') AS SALE_PRICE, SALEDATE
FROM CUSTOMER01 JOIN ORDERS01 USING(CUSTID)
JOIN PRODUCT01 USING(PRODID)
--WHERE SALEDATE BETWEEN '01-OCT-2005' AND '31-OCT-2005'
WHERE TO_CHAR(SALEDATE,'MM') = 10 AND TO_CHAR(SALEDATE,'YYYY') = 2005
ORDER BY SALEPRICE DESC;

--FIRSTNAME	LASTNAME	PRODNAME	SALE_PRICE	SALEDATE
--Mike	Horvath	Refrigerator	   $1100.00	10-OCT-05
--Mike	Horvath	Refrigerator	    $899.00	10-OCT-05
--Irwin	Wade	VCR	    $150.00	11-OCT-05
--George	Marshall	Microwave	     $87.00	12-OCT-05
 
----QUERY 3
----RETURN FIRSTNAME, LASTNAME, SALEPRICE, MSRP, AND DIFFERENCE BETWEEN 
----SALEPRICE AND MSRP FOR ALL SALES, SHOWING ONLY THE SALES WITH SALEPRICE 
----EQUAL OR LESS THAN MSRP AND THE PRICE DIFFERENCE
SELECT C.FIRSTNAME, C.LASTNAME, O.SALEDATE, O.SALEPRICE, 
P.MSRP, (O.SALEPRICE - P.MSRP) AS REDUCTION
FROM CUSTOMER01 C JOIN ORDERS01 O USING (CUSTID) 
JOIN PRODUCT01 P USING(PRODID)
WHERE O.SALEPRICE <= MSRP;

--FIRSTNAME	LASTNAME	SALEDATE	SALEPRICE	MSRP	(O.SALEPRICE-P.MSRP)
--Fred	Hammill	07-JAN-05	97	98	-1
--Stan	Mellish	08-AUG-05	200	200	0
--Adrian	Caparzo	09-APR-05	80	85	-5
--Mike	Horvath	10-OCT-05	899	900	-1
--Irwin	Wade	11-OCT-05	150	165	-15
--Billy	Costigan	14-JUN-05	130	165	-35
--Kristy	Bryant	19-JUN-05	85	98	-13
--Tricia	Hill	21-JUL-05	99	105	-6
--Holly	Raines	22-MAR-05	87	105	-18
--Wendy	Hilton	24-MAR-05	150	165	-15
--Mike	Horvath	10-MAR-05	900	900	0
--George	Marshall	12-AUG-05	88	98	-10
--Frank	Costello	13-DEC-05	198	200	-2
--Kristy	Bryant	19-JUL-05	99	165	-66
--Kelly	Street	20-SEP-05	104	165	-61
--George	Marshall	12-OCT-05	87	98	-11
--Adrian	Caparzo	09-DEC-15	223	900	-677

----QUERY 4
----RETURN CUSTOMERID AND AVERAGE SALEPRICE FOR THOSE CUSTOMERS WHO 
----HAVE PURCHASED 3 OR MORE PRODUCTS, FORMAT THE PRICE WITH $ SIGN ADN 2 DECIMAL
----AND RANK BY AVERAGE PRICE FROM HIGH TO LOW.
SELECT CUSTID, TO_CHAR(AVG(SALEPRICE),'$99999.99') AS AVG_PRICE
FROM ORDERS01 JOIN PRODUCT01 USING (PRODID)
GROUP BY CUSTID
HAVING SUM(QUANTITY) > 2
ORDER BY 2 DESC;

--CUSTID	   AVG_PRICE
--105		   $966.33
--104		   $611.50
--102	   	   $220.00
--103		   $210.50
--108		   $196.00

----QUERY 5
----RANDOMLY SELECT 6 CUSTOMERS WITH CUSTOMERID,LASTNAME, FIRSTNAME, 
----ZIP WHO BOUGHT PRODUCTS IN OFFICE CATEGORY FIRST CREATE A POOL OF ALL 
----CUSTOMERS WHO PURCHASED AN OFFICE PRODUCT, BUT ONLY ALLOW 1 ENTRY PER 
----UNIQUE CUSTOMER THEN RANDOMLY PICK 6 CUSTOMERS FROM THE POOL.
SELECT CUSTID, LASTNAME, FIRSTNAME, ZIP
FROM
(
SELECT UNIQUE CUSTID, LASTNAME, FIRSTNAME, ZIP
FROM CUSTOMER01 JOIN ORDERS01 USING (CUSTID)
JOIN PRODUCT01 USING(PRODID)
WHERE UPPER(CAT) = 'OFFICE'
ORDER BY DBMS_RANDOM.RANDOM
)
WHERE ROWNUM < 7;
 
--CUSTID	LASTNAME	FIRSTNAME	ADDRZIP
--104	Caparzo	Adrian	12377
--115	Street	Kelly	57732
--117	Raines	Holly	35735
--116	Hill	Tricia	46738
--108	Costello	Frank	23905
--103	Mellish	Stan	38556
 
----QUERY 6
----GET CUSTOMER COUNT AND SALES BY STATE IN THE ORDER FROM HIGH SALES TO LOW.
----TOTAL CUSTOMER COUNT AND SALES VALUE AND LABEL IT "TOTAL" IN THE STATE FIELD.
SELECT NVL(STATE, 'TOTAL') AS STATE
,COUNT(DISTINCT CUSTID) AS CUSTOMERS
,TO_CHAR(SUM(SALEPRICE),'$9999999.99')AS SALES
FROM CUSTOMER01 JOIN ORDERS01 USING (CUSTID)
GROUP BY ROLLUP(STATE)
ORDER BY SALES DESC;
 
--STATE	CUSTOMERS	SALES
--TOTAL	15	    $8736.00
--IN	2	    $3222.00
--CO	1	    $1303.00
--KY	2	     $671.00
--HI	1	     $588.00
--WY	1	     $535.00
--AK	1	     $419.00
--ND	1	     $384.00
--ME	1	     $369.00
--ID	1	     $344.00
--SC	1	     $280.00
--NY	1	     $260.00
--FL	1	     $184.00
--MS	1	     $177.00
